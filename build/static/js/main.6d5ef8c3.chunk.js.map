{"version":3,"sources":["Images/homepage.png","Images/ereg.png","Images/pageavailability.png","Components/NavBar/NavBar.js","Components/About/About.js","Components/Projects/Carousel/Carousel.js","Components/Projects/Projects.js","Components/Contact/Contact.js","Components/Home/Home.js","Components/Background/Background.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","NavBar","state","activeContainer","newContainer","this","setState","navBarClass","props","theme","homeLinkClass","aboutLinkClass","projectsLinkClass","contactLinkClass","icon","faMoon","onClick","handleThemeChange","event","faSun","className","to","spy","smooth","duration","handleContainerChange","Component","About","aboutClass","innerClass","id","href","Carousel","sliderContainerClass","faLinkClass","headerClass","prevArrowClass","nextArrowClass","settings","dots","infinite","speed","slidesToShow","slidesToScroll","prevArrow","type","class","nextArrow","faGithub","alt","src","HomepageImage","PageAvailabilityImage","EregImage","Projects","projectsClass","Contact","handleSubmit","email","formResponse","message","sendFeedback","message_html","from_name","reply_to","handleMessageChange","bind","handleEmailChange","target","value","templateId","variables","window","emailjs","send","then","res","catch","err","console","error","alert","contactClass","emailFieldClass","messageFieldClass","rocketClass","name","onChange","placeholder","required","faRocket","Home","homeContainerClass","nameClass","titleClass","linkedinClass","githubClass","Background","particles","params","App","currentContainer","Events","scrollEvent","register","element","log","arguments","appStyleClass","backgroundContainerStyle","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6d5ef8c3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/homepage.346e7575.png\";","module.exports = __webpack_public_path__ + \"static/media/ereg.b19af738.png\";","module.exports = __webpack_public_path__ + \"static/media/pageavailability.d240af87.png\";","import React, { Component } from 'react';\nimport './NavBar.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSun, faMoon } from '@fortawesome/free-solid-svg-icons'\n\nimport { Link } from 'react-scroll';\n\nclass NavBar extends Component {\n\n    state = {\n        activeContainer: 'homeContainer'\n    }\n\n    //Set activeContainer after nav button is pressed\n    handleContainerChange(newContainer) {\n        this.setState({\n            activeContainer: newContainer\n        })\n    }\n\n    render() {\n\n        let navBarClass = 'nav-bar nav-bar-' + this.props.theme\n        let homeLinkClass = 'nav-btn nav-btn-' + this.props.theme\n        let aboutLinkClass = 'nav-btn nav-btn-' + this.props.theme\n        let projectsLinkClass = 'nav-btn nav-btn-' + this.props.theme\n        let contactLinkClass = 'nav-btn nav-btn-' + this.props.theme\n\n\n        //Determines which nav button to make active based on state of activeContainer\n        if (this.state.activeContainer === 'homeContainer') {\n            homeLinkClass = 'nav-btn-active-' + this.props.theme\n        } else if (this.state.activeContainer === 'aboutContainer') {\n            aboutLinkClass = 'nav-btn-active-' + this.props.theme\n        } else if (this.state.activeContainer === 'projectsContainer') {\n            projectsLinkClass = 'nav-btn-active-' + this.props.theme\n        } else if (this.state.activeContainer === 'contactContainer') {\n            contactLinkClass = 'nav-btn-active-' + this.props.theme\n        }\n\n        let icon = null;\n\n        //Switching which icon (moon/sun) is shown based on theme\n        if (this.props.theme === 'light') {\n            icon = <FontAwesomeIcon icon={faMoon} onClick={this.props.handleThemeChange(this.event)} />\n        } else {\n            icon = <FontAwesomeIcon icon={faSun} onClick={this.props.handleThemeChange(this.event)} />\n        }\n\n        return (\n            <div className={navBarClass}>\n                <div className='nav-btn-container'>\n                    <Link className={homeLinkClass} to='homeContainer'\n                        spy={true} smooth={true} duration={500} onClick={() => this.handleContainerChange('homeContainer')}>Home</Link>\n                </div>\n                <div className='nav-btn-container'>\n\n                    <Link className={aboutLinkClass} to='aboutContainer'\n                        spy={true} smooth={true} duration={500} onClick={() => this.handleContainerChange('aboutContainer')}>About</Link>\n                </div>\n                <div className='nav-btn-container'>\n\n                    <Link className={projectsLinkClass} to='projectsContainer'\n                        spy={true} smooth={true} duration={500} onClick={() => this.handleContainerChange('projectsContainer')}>Projects</Link>\n                </div>\n                <div className='nav-btn-container'>\n                    <Link className={contactLinkClass} to='contactContainer'\n                        spy={true} smooth={true} duration={500} onClick={() => this.handleContainerChange('contactContainer')}>Contact</Link>\n                </div>\n                <div className='nav-btn-container'>\n                    {icon}\n                </div>\n            </div>\n        )\n    }\n\n}\n\nexport default NavBar;","import React, { Component } from 'react';\nimport '../../App.css';\nimport './About.css';\n\nclass About extends Component {\n\n    render() {\n\n        let aboutClass = 'outer-container container-' + this.props.theme;\n        let innerClass = 'inner-container inner-' + this.props.theme;\n\n        return (\n            <div className={aboutClass} id={this.props.id}>\n\n                <div className={innerClass}>\n                <h2>Hi, my name is Ryan.</h2>\n                    <div className='about-content'>\n                        <p>\n                            I'm a highly technical administrative professional who uses my passion for code to improve the lives and experiences of my customers.\n                        I'm currently pursuing a <a className='school-link' href='https://london.ac.uk/courses/computer-science'>BSc Computer Science</a> degree\n                            while developing personal projects and contributing to open source initiatives.\n                    </p>\n                        <p>\n\n                        </p>\n                        <br></br>\n                        <div className='skills-container'>\n                            <div className='skill-column'>\n                                <h5>Languages:</h5>\n                                <ul className='skill-list'>\n                                    <li>Java</li>\n                                    <li>Python</li>\n                                    <li>MySQL/T-SQL</li>\n                                    <li>JavaScript</li>\n                                    <li>HTML/CSS</li>\n                                </ul>\n                            </div>\n                            <div className='skill-column'>\n                                <h5>Frameworks:</h5>\n                                <ul className='skill-list'>\n                                    <li>Spring Boot</li>\n                                    <li>Hibernate</li>\n                                    <li>React</li>\n                                </ul>\n                            </div>\n                            <div className='skill-column'>\n                                <h5>Tools:</h5>\n                                <ul className='skill-list'>\n                                    <li>Visual Studio Code</li>\n                                    <li>Terminal</li>\n                                    <li>AWS Amplify</li>\n                                    <li>Postman</li>\n                                    <li>Chrome Developer Tools</li>\n                                </ul>\n                            </div>\n                            <div className='skill-column'>\n                                <h5>Knowledge:</h5>\n                                <ul className='skill-list'>\n                                    <li>Object Oriented Programming</li>\n                                    <li>Algorithms and Data Structures</li>\n                                    <li>RESTful API Design and Creation</li>\n                                    <li>Database Design and Management</li>\n                                    <li>Service Oriented Architecture</li>\n                                    <li>Debugging</li>\n                                </ul>\n                            </div>\n                        </div>\n                    </div>\n\n\n                </div>\n            </div>\n\n        )\n    }\n\n}\n\nexport default About;","import React from 'react';\nimport Slider from 'react-slick';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faGithub } from '@fortawesome/free-brands-svg-icons'\n\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport HomepageImage from '../../../Images/homepage.png'\nimport EregImage from '../../../Images/ereg.png'\nimport PageAvailabilityImage from '../../../Images/pageavailability.png'\n\nimport './Carousel.css'\nimport '../../../App.css'\n\nfunction Carousel(props) {\n\n\n\n  //Variables to control class theming\n  let sliderContainerClass = 'slider-container slider-' + props.theme;\n  let faLinkClass = 'fa-' + props.theme;\n  let headerClass = 'project-link ' + props.theme;\n  let prevArrowClass = 'slick-prev slick-' + props.theme;\n  let nextArrowClass = 'slick-next slick-' + props.theme;\n\n    //Settings for carousel\n    let settings = {\n      dots: false,\n      infinite: true,\n      speed: 800,\n      slidesToShow: 1,\n      slidesToScroll: 1,\n      prevArrow: <button type=\"button\" class={prevArrowClass}>Previous</button>,\n      nextArrow: <button type=\"button\" class={nextArrowClass}>Previous</button>,\n    };\n\n  return (\n\n    <Slider {...settings}>\n      <div className='out'>\n        <div className={sliderContainerClass}>\n          <div className='slider-container-inner'>\n          <a className={headerClass} href='https://github.com/ryanslevin/homepage'><FontAwesomeIcon icon={faGithub} className={faLinkClass} /><h4>Homepage</h4></a>\n          <p>Personal Portfolio Website</p>\n              <div className=\"column\">\n                <h5>Languages: Javascript / JSX / CSS</h5>\n                <h5>Frameworks: React</h5>\n                <h5>Tools: AWS Amplify</h5>\n                <ul>\n                  <li>Single page application using the React framework</li>\n                  <li>Deployed with AWS Amplify to allow for continuous deployment</li>\n                  <li>State controlled themes and scroll-based navigation</li>\n                </ul>\n              </div>\n              <div className=\"column\">\n                <img className='portfolio-image' alt='Screenshot of Homepage web-app'src={HomepageImage} />\n              </div>\n            </div>\n          </div>\n        </div>\n      <div className={sliderContainerClass}>\n        <div className='slider-container-inner'>\n        <a className={headerClass} href='https://github.com/ryanslevin/page-availability'><FontAwesomeIcon icon={faGithub} className={faLinkClass} /><h4>Page Availability</h4></a>\n        <p>Recursive Page Availability Monitor</p>\n        <div className=\"column\">\n                <h5>Languages: PowerShell</h5>\n                <h5>Frameworks: .NET</h5>\n                <ul>\n                  <li>Recursive page availability monitor for eCommerce website.</li>\n                  <li>Written in PowerShell using .NET framework functionality</li>\n                  <li>Reduced staff time required to manually monitor page availability</li>\n                  <li>Automated monitoring significantly reduced page downtime and improved customer experience</li>\n                </ul>\n              </div>\n              <div className=\"column\">\n          <img className='portfolio-image' alt='Screenshot of page availability script'src={PageAvailabilityImage} />\n        </div>\n        </div>\n      </div>\n      <div className='out'>\n        <div className={sliderContainerClass}>\n          <div className='slider-container-inner'>\n          <a className={headerClass} href='https://github.com/ryanslevin/ereg'><FontAwesomeIcon icon={faGithub} className={faLinkClass} /><h4>eReg</h4></a>\n          <p>User and Course Registration Management</p>\n              <div className=\"column\">\n              <h5>Languages: Java / MySQL / JavaScript / JSX / CSS </h5>\n                <h5>Frameworks: Spring Boot / React</h5>\n                <h5>Tools: AWS Amplify</h5>\n                <ul>\n                  <li>RESTful API built with Java and Spring Boot</li>\n                  <li>Uses Hibernate to integrate with MySQL database</li>\n                  <li>Front end built with React to create Single Page Application experience</li>\n                </ul>                \n              </div>\n            <div className='column'>\n            <img className='portfolio-image' alt='Screenshot of eReg code' src={EregImage} />\n            </div>\n            </div>\n          </div>\n        </div>\n\n    </Slider>\n\n  )\n}\n\nexport default Carousel;","import React, { Component } from 'react';\nimport './Projects.css'\nimport '../../App.css'\nimport Carousel from './Carousel/Carousel'\n\nclass Projects extends Component {\n\n\n    render() {\n\n        let projectsClass = 'outer-container container-'+this.props.theme;\n        let innerClass='inner-container inner-'+this.props.theme;\n\n        return (\n            <div className={projectsClass} id={this.props.id}>\n                <div className={innerClass}>\n                    <h2>These are my projects.</h2>\n                <Carousel theme={this.props.theme}/>\n               </div>\n            </div>\n        )\n    }\n\n}\n\nexport default Projects;","import React, { Component } from 'react';\nimport './Contact.css'\nimport '../../App.css'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faRocket } from '@fortawesome//free-solid-svg-icons'\n\nclass Contact extends Component {\n\n\n    constructor(props) {\n        super(props);\n        this.state = { message: '', email: '', formResponse: '' };\n        this.handleMessageChange = this.handleMessageChange.bind(this);\n        this.handleEmailChange = this.handleEmailChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.formResponse = '';\n    }\n\n    handleMessageChange(event) {\n        this.setState({ message: event.target.value })\n    }\n\n    handleEmailChange(event) {\n        this.setState({ email: event.target.value })\n    }\n\n    handleSubmit = (event) => {\n        const templateId = 'template_qZW0hSVb';\n\n        if (this.state.email === '') {\n            this.setState({formResponse: 'Launch Failed! Please add an email address and retry.'})\n        }else if (this.state.message === '') {\n            this.setState({formResponse: 'Launch Failed! Please add a message and retry.'})\n        }else {\n            this.sendFeedback(templateId, { message_html: this.state.message, from_name: this.state.email, reply_to: this.state.email })\n        }\n    }\n\n    sendFeedback(templateId, variables) {\n        window.emailjs.send(\n            'gmail', templateId,\n            variables\n        ).then(res => {\n            this.setState({message: '', email: '', formResponse: 'Email Launched!'})\n        })\n            // Handle errors here however you like, or use a React error boundary\n            .catch(err => console.error('Oh well, you failed. Here some thoughts on the error that occured:', err,\n                alert('There was an error with your submission, please try again.')))\n\n    }\n\n    render() {\n\n        let contactClass = 'outer-container container-' + this.props.theme;\n        let innerClass = 'inner-container inner-' + this.props.theme;\n        let emailFieldClass = 'contact-form-field contact-form-field-' + this.props.theme +' email';\n        let messageFieldClass = 'contact-form-field contact-form-field-' + this.props.theme + ' message-body';\n        let rocketClass = 'fa fa-rocket submit-icon fa-' + this.props.theme;\n\n        return (\n            <div className={contactClass} id={this.props.id}>\n                <h2>Let's talk.</h2>\n                <div className={innerClass}>\n                    <form className=\"contact-form\">\n                        <div>\n                            <input\n                                id=\"email-body\"\n                                type='email'\n                                className={emailFieldClass}\n                                name=\"RyanSlevin.com Contact Form Submission\"\n                                onChange={(event) => this.handleEmailChange(event)}\n                                placeholder=\"email@example.com\"\n                                required='true'\n                                value={this.state.email}\n                            />\n                        </div>\n                        <div>\n                            <textarea\n                                id=\"email-body\"\n                                className={messageFieldClass}\n                                name=\"RyanSlevin.com Contact Form Submission\"\n                                onChange={(event) => this.handleMessageChange(event)}\n                                placeholder=\"Hello Ryan, I would like to hire you.\"\n                                required\n                                value={this.state.message}\n                            />\n                        </div>\n                        <div className='submit-container'>\n                        <FontAwesomeIcon type='submit' icon={faRocket} class={rocketClass} onClick={() => this.handleSubmit()} />\n                        <p className='status-message'>{this.state.formResponse}</p>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        )\n    }\n\n}\n\nexport default Contact;","import React from 'react';\n\nimport './Home.css'\nimport '../../App.css'\n\nexport default function Home(props) {\n\n\n    //Variables to hold the CSS class names, theme appended to end via props\n    //to enable theme switching\n    let homeContainerClass = 'home home-' + props.theme;\n    let nameContainerClass = 'name-container';\n    let nameClass = 'name name-' + props.theme;\n    let titleClass = 'title title-' + props.theme;\n    let linkedinClass = 'fa fa-linkedin fa-' + props.theme;\n    let githubClass = 'fa fa-github fa-' + props.theme;\n\n    return (\n\n        <div className={homeContainerClass} id={props.id}>\n            <div className={nameContainerClass}>\n                <h2 className={nameClass} >Ryan Slevin</h2>\n                <div className={titleClass}>Software Engineer - Vancouver, BC</div>\n                <a href=\"https://www.linkedin.com/in/ryan-slevin-02b99140/\" className={linkedinClass}></a>\n                <a href=\"https://github.com/ryanslevin\" className={githubClass}></a>\n            </div>\n        </div>\n    )\n}\n","import React from 'react';\n\nimport Particles from 'react-particles-js';\n\nfunction Background(props) {\n\n    //Dark teme settings for particles object\n    let particlesDark = {\n        \"particles\": {\n            \"number\": {\n                \"value\": 50,\n                \"density\": {\n                    \"enable\": true,\n                    \"value_area\": 3000\n                }\n            },\n            \"line_linked\": {\n                \"enable\": false\n            },\n            \"move\": {\n                \"direction\": \"right\",\n                \"speed\": 0.4,\n                \"straight\": true,\n                \"bounce\": false,\n                \"out_mode\": \"out\"\n            },\n            \"size\": {\n                \"value\": 1.5\n            },\n            \"opacity\": {\n                \"anim\": {\n                    \"enable\": true,\n                    \"speed\": 0.25,\n                    \"opacity_min\": 0.05\n                }\n            }\n        },\n        \"interactivity\": {\n            \"events\": {\n                \"onclick\": {\n                    \"enable\": false\n                }\n            },\n        },\n        \"retina_detect\": true\n    }\n\n    //Light theme settings for particle object\n    let particlesLight = {\n        \"particles\": {\n            \"number\": {\n                \"value\": 5,\n                \"density\": {\n                    \"enable\": true,\n                    \"value_area\": 3000\n                }\n            },    \n            \"color\": {\n                \"value\": \"#383838\"\n              },\n            \"line_linked\": {\n                \"enable\": true,\n                \"opacity\": .75,\n                \"color\": \"#383838\",\n                \"width\": 1,\n                \"distance\": 3000,\n            },\n            \"move\": {\n                \"direction\": \"none\",\n                \"speed\": 4,\n                \"random\": true,\n                \"bounce\": true\n            },\n            \"size\": {\n                \"value\": .25\n            },\n            \"opacity\": {\n                \"anim\": {\n                    \"enable\": false\n                }\n            }\n        },\n        \"interactivity\": {\n            \"events\": {\n                \"onclick\": {\n                    \"enable\": false\n                }\n            },\n        },\n        \"retina_detect\": true\n    }\n\n    let particles = null;\n\n    //Assign settins to particle variable based on props theme\n    if (props.theme === 'dark') {\n        particles = particlesDark\n    }else {\n        particles = particlesLight\n    }\n\n    return(\n        <Particles params={particles} />\n    )\n}\n\nexport default Background;","import React, { Component } from 'react';\nimport NavBar from './Components/NavBar/NavBar'\nimport About from './Components/About/About';\nimport Projects from './Components/Projects/Projects';\nimport Contact from './Components/Contact/Contact'\nimport Home from './Components/Home/Home'\nimport Background from './Components/Background/Background'\nimport './App.css';\n\nimport { Events } from \"react-scroll\";\n\n\nclass App extends Component {\n\n  state = {\n    currentContainer: 'Home',\n    theme: 'dark'\n  }\n\n\n  componentDidMount() {\n\n    //Outputs scroll begin events to console for debugging react-scroll\n    Events.scrollEvent.register(\"begin\", function (to, element) {\n      console.log(\"begin\", arguments);\n    });\n\n    //Outputs scroll end events to console for debugging react-scroll\n    Events.scrollEvent.register(\"end\", function (to, element) {\n      console.log(\"end\", arguments);\n    });\n  }\n\n  //Handles theme change action from NavBar and sets state\n  handleThemeChange(event) {\n    if (this.state.theme === 'dark') {\n      this.setState({\n        theme: 'light'\n      })\n    } else {\n      this.setState({\n        theme: 'dark'\n      })\n    }\n  }\n\n  componentDidUpdate() {\n    console.log(this.state.theme)\n  }\n\n  render() {\n\n    let appStyleClass = 'app app-' + this.state.theme;\n    let backgroundContainerStyle = 'background-container background-container-'+this.state.theme;\n\n    return (\n      <div className={appStyleClass}>\n        <NavBar theme={this.state.theme} handleThemeChange={() => this.handleThemeChange.bind(this)} />\n        <div className={backgroundContainerStyle}>\n          <Background theme={this.state.theme} />\n        </div>\n        <Home id='homeContainer' theme={this.state.theme} />\n        <About id=\"aboutContainer\" theme={this.state.theme} />\n        <Projects id='projectsContainer' theme={this.state.theme} />\n        <Contact id='contactContainer' theme={this.state.theme} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}